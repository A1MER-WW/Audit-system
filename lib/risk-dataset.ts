import { Row, TabKey } from "@/types/risk";

/** ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° type ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ü‡∏¥‡∏•‡∏î‡πå audit_category_name ‡πÉ‡∏´‡πâ‡∏Å‡πâ‡∏≠‡∏ô‡∏£‡∏ß‡∏° */
export type RowWithCategory = Row & {
  audit_category_name:
    | "‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô"
    | "‡∏á‡∏≤‡∏ô"
    | "‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"
    | "‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏±‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏´‡∏•‡∏∑‡πà‡∏≠‡∏°‡∏õ‡∏µ"
    | "‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°"
    | "‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏á‡∏≤‡∏ô"
    | "IT ‡πÅ‡∏•‡∏∞ Non-IT";
};

const SARABUN_UNITS: string[] = [
  "‡∏™‡∏•‡∏Å.", "‡∏®‡∏Å‡∏ä.", "‡∏Å‡∏ô‡∏ú.", "‡∏™‡∏ß‡∏®.", "‡∏®‡∏™‡∏™.", "‡∏®‡∏õ‡∏ú.", "‡∏Å‡∏®‡∏õ.",
  ...Array.from({ length: 12 }, (_, i) => `‡∏™‡∏®‡∏ó.${i + 1}`),
];

export const SCORE_RULES = { highMin: 60, mediumMin: 41 };
export function toGrade(score: number): "H" | "M" | "L" {
  if (score === undefined || score === null) return "L";
  if (score >= 75) return "H";
  if (score >= 50) return "M";
  return "L";
}
export function scoreFromIndex(idx: string): number {
  const n = Number(idx.replace(/\D/g, "")) || 0;
  switch (n % 7) {
    case 0: return 65;
    case 1: return 56;
    case 2: return 55;
    case 3: return 54;
    case 4: return 51;
    case 5: return 44;
    default: return 10;
  }
};

export function evaluateRows(rows: Row[]): Row[] {
  // ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô/‡πÄ‡∏Å‡∏£‡∏î ‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏û‡∏≤‡πÄ‡∏£‡∏ô‡∏ï‡πå = max ‡∏•‡∏π‡∏Å
  const withScores = rows.map((r) => {
    const s = r.score > 0 ? r.score : scoreFromIndex(r.index);
    return { ...r, score: s, grade: toGrade(s), status: s > 0 ? "‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß" : r.status };
  });

  const byIndex = new Map(withScores.map((r) => [r.index, r]));
  const parents = withScores.filter((r) => !r.index.includes("."));
  for (const p of parents) {
    const children = withScores.filter((c) => c.index.startsWith(p.index + "."));
    if (children.length) {
      const maxChild = Math.max(...children.map((c) => c.score || 0));
      const score = Math.max(p.score || 0, maxChild);
      byIndex.set(p.index, { ...p, score, grade: toGrade(score), status: "‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß" });
    }
  }

  return Array.from(byIndex.values()).sort((a, b) => {
    const A = a.index.split(".").map(Number);
    const B = b.index.split(".").map(Number);
    return A[0] !== B[0] ? A[0] - B[0] : (A[1] || 0) - (B[1] || 0);
  });
}

/* -------------------------------------------------------
   ‚úÖ ‡∏Å‡πâ‡∏≠‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß (ALL) + ‡∏°‡∏µ audit_category_name
   ------------------------------------------------------- */

/** ‡∏õ‡πâ‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î (‡πÑ‡∏ó‡∏¢) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏õ‡∏∞‡πÉ‡∏ô audit_category_name */
const CATEGORY_LABELS = {
  unit: "‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô",
  work: "‡∏á‡∏≤‡∏ô",
  project: "‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£",
  carry: "‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏±‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏´‡∏•‡∏∑‡πà‡∏≠‡∏°‡∏õ‡∏µ",
  activity: "‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°",
  process: "‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏á‡∏≤‡∏ô",
  it: "IT ‡πÅ‡∏•‡∏∞ Non-IT",
} as const;

/** ‡πÉ‡∏™‡πà‡∏õ‡πâ‡∏≤‡∏¢ audit_category_name ‡πÉ‡∏´‡πâ‡πÅ‡∏ñ‡∏ß */
function tagCategory(rows: Row[], cat: keyof typeof CATEGORY_LABELS): RowWithCategory[] {
  const label = CATEGORY_LABELS[cat];
  return rows.map(r => ({ ...r, audit_category_name: label }));
}

/** ‚úÖ ‡∏Å‡πâ‡∏≠‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏ó‡∏∏‡∏Å‡∏ó‡∏µ‡πà */
export function buildAllRowsRaw(): RowWithCategory[] {
  const unit = tagCategory(buildUnitRows(), "unit");
  const work = tagCategory(buildWorkRows(), "work");
  const project = tagCategory(buildProjectRows(), "project");
  const carry = tagCategory(buildCarryRows(), "carry");
  const activity = tagCategory(buildActivityRows(), "activity");

  // ‡∏´‡∏°‡∏ß‡∏î process / it ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ mock ‡πÅ‡∏¢‡∏Å‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
  // ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏à‡∏£‡∏¥‡∏á ‡∏Ñ‡πà‡∏≠‡∏¢‡πÄ‡∏ï‡∏¥‡∏° buildProcessRows(), buildItRows() ‡πÅ‡∏•‡πâ‡∏ß tagCategory ‡πÄ‡∏û‡∏¥‡πà‡∏°
  const all = [...unit, ...work, ...project, ...carry, ...activity];

  // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏° index
  all.sort((a, b) => {
    const A = a.index.split(".").map(Number);
    const B = b.index.split(".").map(Number);
    return A[0] !== B[0] ? A[0] - B[0] : (A[1] || 0) - (B[1] || 0);
  });
  return all;
}

/** üîÅ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏°: ‡πÅ‡∏õ‡∏•‡∏á ‚Äú‡∏Å‡πâ‡∏≠‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‚Äù ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô rowsByTab (‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏à‡∏∏‡∏î‡∏≠‡∏∑‡πà‡∏ô‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡πÄ‡∏î‡∏¥‡∏°) */
export function buildRowsByTabRaw(): Record<Exclude<TabKey,"all">, Row[]> {
  const all = buildAllRowsRaw();
  const pick = (label: RowWithCategory["audit_category_name"]) =>
    all.filter(r => r.audit_category_name === label);

  return {
    unit: pick(CATEGORY_LABELS.unit),
    work: pick(CATEGORY_LABELS.work),
    project: pick(CATEGORY_LABELS.project),
    carry: pick(CATEGORY_LABELS.carry),
    activity: pick(CATEGORY_LABELS.activity),
    process: pick(CATEGORY_LABELS.process),   // ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏ß‡πà‡∏≤‡∏á (‡πÑ‡∏°‡πà‡∏°‡∏µ mock)
    it: pick(CATEGORY_LABELS.it),             // ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏ß‡πà‡∏≤‡∏á (‡πÑ‡∏°‡πà‡∏°‡∏µ mock)
  };
}

/** ‡πÉ‡∏ä‡πâ‡∏Å‡πâ‡∏≠‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ (‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏Å‡∏ß‡πà‡∏≤) */
export function findRowById(id: string): Row | undefined {
  const all = buildAllRowsRaw();
  return all.find(r => r.id === id);
}

/* -------------------------------------------------------
   ‚úÖ Mock builders (‡πÄ‡∏î‡∏¥‡∏°) ‚Äî ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏Ñ‡πà‡∏™‡πà‡∏ß‡∏ô "‡∏á‡∏≤‡∏ô" ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô 1‚Äì19 + 20++
   ------------------------------------------------------- */

function buildUnitRows(): Row[] {
  const parent: Row = {
    id: "101", index: "101", unit: "‡∏Å‡∏û‡∏£.",
    mission: "‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏ï‡∏≤‡∏°‡∏Å‡∏é‡∏Å‡∏£‡∏∞‡∏ó‡∏£‡∏ß‡∏á (‡∏£‡∏ß‡∏° 5 ‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à)",
    work: "-", project: "-", carry: "-", activity: "-", process: "-", system: "-", itType: "-",
    score: 0, grade: "-", status: "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô", hasDoc: true,
  };
  const children: Row[] = [
    ["101.1", "‡∏Å‡∏≥‡∏Å‡∏±‡∏ö ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏†‡∏≤‡∏Ñ‡∏£‡∏±‡∏ê"],
    ["101.2", "‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£"],
    ["101.3", "‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏á‡∏≤‡∏ô"],
    ["101.4", "‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ò‡∏£‡∏£‡∏°‡∏≤‡∏†‡∏¥‡∏ö‡∏≤‡∏•‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∏‡∏ì‡∏ò‡∏£‡∏£‡∏°"],
    ["101.5", "‡∏à‡∏±‡∏î‡∏ó‡∏≥‡∏ï‡∏±‡∏ß‡∏ä‡∏µ‡πâ‡∏ß‡∏±‡∏î‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏•"],
  ].map(([index, mission]) => ({
    id: index as string, index: index as string, unit: "‡∏Å‡∏û‡∏£.",
    mission: mission as string,
    work: "-", project: "-", carry: "-", activity: "-", process: "-", system: "-", itType: "-",
    score: 0, grade: "-", status: "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô", hasDoc: true,
  }));
  return [parent, ...children];
}


function buildWorkRows(): Row[] {
  // helper ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ñ‡∏ß‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô
  const mkRow = (idx: number, unit: string, work: string): Row => ({
    id: String(idx),
    index: String(idx),
    unit,
    mission: "-",
    work,
    project: "-",
    carry: "-",
    activity: "-",
    process: "-",
    system: "-",
    itType: "-",
    score: 0,
    grade: "-",
    status: "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô",
    hasDoc: true,
  });

  // 1‚Äì19 : ‡∏á‡∏≤‡∏ô‡∏™‡∏≤‡∏£‡∏ö‡∏£‡∏£‡∏ì‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏ô‡πà‡∏ß‡∏¢ (‡πÄ‡∏î‡∏¥‡∏° 1.1‚Äì1.19)
  const block1 = SARABUN_UNITS.map((u, i) => mkRow(i + 1, u, "‡∏á‡∏≤‡∏ô‡∏™‡∏≤‡∏£‡∏ö‡∏£‡∏£‡∏ì"));

  // ‡πÄ‡∏î‡∏¥‡∏° 2‚Äì32 => ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô 20‚Äì50 (‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ô)
  const defs = [
    { unit: "‡∏™‡∏•‡∏Å.", work: "‡∏á‡∏≤‡∏ô‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•" },
    { unit: "‡∏Å‡∏û‡∏£./‡∏™‡∏•‡∏Å./‡∏®‡∏Å‡∏ä./‡∏Å‡∏ô‡∏ú./‡∏™‡∏ß‡∏®./‡∏®‡∏™‡∏™./‡∏®‡∏õ‡∏ú./‡∏Å‡∏®‡∏õ./‡∏™‡∏®‡∏ó.1-12", work: "‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ ‡πÅ‡∏•‡∏∞‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì" },
    { unit: "‡∏Å‡∏û‡∏£./‡∏™‡∏•‡∏Å./‡∏®‡∏Å‡∏ä./‡∏Å‡∏ô‡∏ú./‡∏™‡∏ß‡∏®./‡∏®‡∏™‡∏™./‡∏®‡∏õ‡∏ú./‡∏Å‡∏®‡∏õ./‡∏™‡∏®‡∏ó.1-12", work: "‡∏á‡∏≤‡∏ô‡∏û‡∏±‡∏™‡∏î‡∏∏" },
    { unit: "‡∏™‡∏•‡∏Å.", work: "‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå" },
    { unit: "‡∏™‡∏•‡∏Å.", work: "‡∏á‡∏≤‡∏ô‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì" },
    { unit: "‡∏™‡∏•‡∏Å.", work: "‡∏á‡∏≤‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏á‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏≤‡∏ô‡∏∏‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô" },
    { unit: "‡∏®‡∏õ‡∏ú.", work: "‡∏á‡∏≤‡∏ô‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢ ‡∏ô‡∏¥‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏™‡∏±‡∏ç‡∏ç‡∏≤ ‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ß‡∏¥‡∏ô‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ò‡∏£‡∏£‡∏°" },
    { unit: "‡∏Å‡∏ô‡∏ú./‡∏™‡∏®‡∏ó.1-12", work: "‡∏á‡∏≤‡∏ô‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£ ..." },
    { unit: "‡∏Å‡∏ô‡∏ú.", work: "‡∏á‡∏≤‡∏ô‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡πÅ‡∏ú‡∏ô‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏®‡∏£‡∏©‡∏ê‡∏Å‡∏¥‡∏à‡πÄ‡∏â‡∏û‡∏≤‡∏∞" },
    { unit: "‡∏Å‡∏ô‡∏ú.", work: "‡∏á‡∏≤‡∏ô‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏Ç‡∏≠‡∏á‡∏Å‡∏£‡∏∞‡∏ó‡∏£‡∏ß‡∏á‡πÄ‡∏Å‡∏©‡∏ï‡∏£‡πÅ‡∏•‡∏∞‡∏™‡∏´‡∏Å‡∏£‡∏ì‡πå" },
    { unit: "‡∏Å‡∏ô‡∏ú.", work: "‡∏á‡∏≤‡∏ô‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏Å‡∏≤‡∏£‡πÄ‡∏®‡∏£‡∏©‡∏ê‡∏Å‡∏¥‡∏à‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£" },
    { unit: "‡∏Å‡∏ô‡∏ú.", work: "‡∏á‡∏≤‡∏ô‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡πÅ‡∏ú‡∏ô‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡πÇ‡∏•‡∏à‡∏¥‡∏™‡∏ï‡∏¥‡∏Å‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£" },
    { unit: "‡∏Å‡∏®‡∏õ.", work: "‡∏á‡∏≤‡∏ô‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏¢‡∏∏‡∏ó‡∏ò‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå ..." },
    { unit: "‡∏Å‡∏®‡∏õ.", work: "‡∏á‡∏≤‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏á‡∏≤‡∏ô‡∏ï‡∏≤‡∏°‡∏û‡∏±‡∏ô‡∏ò‡∏Å‡∏£‡∏ì‡∏µ ..." },
    { unit: "‡∏Å‡∏®‡∏õ.", work: "‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏™‡∏≤‡∏ô‡∏á‡∏≤‡∏ô‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≤‡∏ß‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô" },
    { unit: "‡∏®‡∏õ‡∏ú.", work: "‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ú‡∏• ..." },
    { unit: "‡∏®‡∏õ‡∏ú.", work: "‡∏á‡∏≤‡∏ô‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏ô‡∏ß‡∏±‡∏ï‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ú‡∏•" },
    { unit: "‡∏®‡∏õ‡∏ú.", work: "‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏™‡∏≤‡∏ô‡∏á‡∏≤‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏ô‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏û‡∏£‡∏∞‡∏£‡∏≤‡∏ä‡∏î‡∏≥‡∏£‡∏¥" },
    { unit: "‡∏®‡∏™‡∏™.", work: "‡∏á‡∏≤‡∏ô‡∏†‡∏π‡∏°‡∏¥‡∏™‡∏≤‡∏£‡∏™‡∏ô‡πÄ‡∏ó‡∏®‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£" },
    { unit: "‡∏®‡∏™‡∏™.", work: "‡∏á‡∏≤‡∏ô‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏™‡∏≤‡∏£‡∏™‡∏ô‡πÄ‡∏ó‡∏®" },
    { unit: "‡∏®‡∏™‡∏™./‡∏™‡∏®‡∏ó.1-12", work: "‡∏á‡∏≤‡∏ô‡∏™‡∏≤‡∏£‡∏™‡∏ô‡πÄ‡∏ó‡∏®‡πÄ‡∏®‡∏£‡∏©‡∏ê‡∏Å‡∏¥‡∏à‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£ ..." },
    { unit: "‡∏®‡∏™‡∏™.", work: "‡∏á‡∏≤‡∏ô‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£" },
    { unit: "‡∏®‡∏™‡∏™.", work: "‡∏á‡∏≤‡∏ô‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£" },
    { unit: "‡∏™‡∏ß‡∏®.", work: "‡∏á‡∏≤‡∏ô‡∏ß‡∏¥‡∏à‡∏±‡∏¢‡πÄ‡∏®‡∏£‡∏©‡∏ê‡∏Å‡∏¥‡∏à‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£ ..." },
    { unit: "‡∏™‡∏ß‡∏®.", work: "‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ô‡∏ß‡∏±‡∏ï‡∏Å‡∏£‡∏£‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏ß‡∏¥‡∏à‡∏±‡∏¢‡πÄ‡∏®‡∏£‡∏©‡∏ê‡∏Å‡∏¥‡∏à‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£" },
    { unit: "‡∏™‡∏ß‡∏®.", work: "‡∏á‡∏≤‡∏ô‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô‡∏†‡∏≤‡∏Ñ‡πÄ‡∏Å‡∏©‡∏ï‡∏£" },
    { unit: "‡∏®‡∏Å‡∏ä.", work: "‡∏á‡∏≤‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏≤‡∏†‡∏¥‡∏ö‡∏≤‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏á‡∏≤‡∏ô‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•" },
    { unit: "‡∏®‡∏Å‡∏ä.", work: "‡∏á‡∏≤‡∏ô‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏õ‡∏±‡∏ç‡∏ç‡∏≤‡∏õ‡∏£‡∏∞‡∏î‡∏¥‡∏©‡∏ê‡πå" },
    { unit: "‡∏®‡∏Å‡∏ä.", work: "‡∏á‡∏≤‡∏ô‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏®‡∏£‡∏©‡∏ê‡∏Å‡∏¥‡∏à‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£" },
    { unit: "‡∏®‡∏Å‡∏ä.", work: "‡∏á‡∏≤‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏†‡∏±‡∏¢‡∏û‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£" },
    { unit: "‡∏Å‡∏û‡∏£.", work: "‡∏á‡∏≤‡∏ô‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏†‡∏≤‡∏Ñ‡∏£‡∏±‡∏ê" },
  ] as const;

  const block2 = defs.map((t, i) => mkRow(19 + i + 1, t.unit, t.work));

  return [...block1, ...block2];
}

function buildProjectRows(): Row[] {
  const parent: Row = {
    id: "201", index: "201", unit: "‡∏´‡∏•‡∏≤‡∏¢‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô",
    mission: "-", work: "-", project: "‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏õ‡∏µ 2568 (‡∏£‡∏ß‡∏° 8 ‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£)",
    carry: "-", activity: "-", process: "-", system: "-", itType: "-",
    score: 0, grade: "-", status: "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô", hasDoc: true,
  };
  const names = [
    "‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏®‡∏£‡∏©‡∏ê‡∏Å‡∏¥‡∏à‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£",
    "‡∏¢‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï",
    "‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡∏£‡∏à‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏©‡∏ï‡∏£",
    "‡πÄ‡∏ù‡πâ‡∏≤‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏†‡∏±‡∏¢‡∏û‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£",
    "‡∏Ç‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÇ‡∏•‡∏à‡∏¥‡∏™‡∏ï‡∏¥‡∏Å‡∏™‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£",
    "‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏≤‡∏á",
    "‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏á‡∏≤‡∏ô‡∏ß‡∏¥‡∏à‡∏±‡∏¢‡πÄ‡∏®‡∏£‡∏©‡∏ê‡∏Å‡∏¥‡∏à‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏©‡∏ï‡∏£",
    "‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏©‡∏ï‡∏£",
  ];
  const children: Row[] = names.map((n, i) => ({
    id: `201.${i + 1}`, index: `201.${i + 1}`, unit: i % 2 ? "‡∏®‡∏™‡∏™." : "‡∏®‡∏Å‡∏ä.",
    mission: "-", work: "-", project: n, carry: "-", activity: "-", process: "-", system: "-",
    itType: "-", score: 0, grade: "-", status: "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô", hasDoc: true,
  }));
  return [parent, ...children];
}

function buildCarryRows(): Row[] {
  const parent: Row = {
    id: "301", index: "301", unit: "‡∏´‡∏•‡∏≤‡∏¢‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô",
    mission: "-", work: "-", project: "-", carry: "‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏±‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏´‡∏•‡∏∑‡πà‡∏≠‡∏°‡∏õ‡∏µ 2568 (‡∏£‡∏ß‡∏° 4 ‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£)",
    activity: "-", process: "-", system: "-", itType: "-",
    score: 0, grade: "-", status: "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô", hasDoc: true,
  };
  const children: Row[] = [
    "‡∏Å‡∏±‡∏ô‡πÄ‡∏á‡∏¥‡∏ô: ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Ñ‡∏•‡∏±‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏≤‡∏á",
    "‡∏Å‡∏±‡∏ô‡πÄ‡∏á‡∏¥‡∏ô: ‡∏à‡∏±‡∏î‡∏ã‡∏∑‡πâ‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏£‡∏ß‡∏à",
    "‡∏Å‡∏±‡∏ô‡πÄ‡∏á‡∏¥‡∏ô: ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏≠‡∏¥‡πÄ‡∏•‡πá‡∏Å‡∏ó‡∏£‡∏≠‡∏ô‡∏¥‡∏Å‡∏™‡πå",
    "‡∏Å‡∏±‡∏ô‡πÄ‡∏á‡∏¥‡∏ô: ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ö‡∏∏‡∏Ñ‡∏•‡∏≤‡∏Å‡∏£‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å",
  ].map((n, i) => ({
    id: `301.${i + 1}`, index: `301.${i + 1}`, unit: i % 2 ? "‡∏™‡∏•‡∏Å." : "‡∏®‡∏™‡∏™.",
    mission: "-", work: "-", project: "-", carry: n, activity: "-", process: "-", system: "-",
    itType: "-", score: 0, grade: "-", status: "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô", hasDoc: true,
  }));
  return [parent, ...children];
}

function buildActivityRows(): Row[] {
  const parent: Row = {
    id: "401", index: "401", unit: "‡∏´‡∏•‡∏≤‡∏¢‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô",
    mission: "-", work: "-", project: "-", carry: "-",
    activity: "‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° (‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï) ‡∏õ‡∏µ 2568 (‡∏£‡∏ß‡∏° 6 ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°)",
    process: "-", system: "-", itType: "-",
    score: 0, grade: "-", status: "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô", hasDoc: true,
  };
  const items = [
    "‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡∏∞‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
    "‡∏ß‡∏¥‡∏à‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏ó‡∏≥‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÄ‡∏ä‡∏¥‡∏á‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢",
    "‡∏ù‡∏∂‡∏Å‡∏≠‡∏ö‡∏£‡∏°/‡∏ñ‡πà‡∏≤‡∏¢‡∏ó‡∏≠‡∏î‡∏≠‡∏á‡∏Ñ‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ",
    "‡πÄ‡∏ú‡∏¢‡πÅ‡∏û‡∏£‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞",
    "‡∏™‡∏≥‡∏£‡∏ß‡∏à‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏†‡∏≤‡∏Ñ‡∏™‡∏ô‡∏≤‡∏°",
    "‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ú‡∏•‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£",
  ];
  const children: Row[] = items.map((n, i) => ({
    id: `401.${i + 1}`, index: `401.${i + 1}`,
    unit: ["‡∏®‡∏™‡∏™.", "‡∏™‡∏ß‡∏®.", "‡∏Å‡∏®‡∏õ.", "‡∏®‡∏õ‡∏ú.", "‡∏Å‡∏ô‡∏ú.", "‡∏®‡∏Å‡∏ä."][i] || "‡∏®‡∏™‡∏™.",
    mission: "-", work: "-", project: "-", carry: "-",
    activity: n, process: "-", system: "-", itType: "-",
    score: 0, grade: "-", status: "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô", hasDoc: true,
  }));
  return [parent, ...children];
}
